from aiogram import types

from database.db import Database

db = Database('database/db.db')


def auth_user_message(func):
    async def wrapper(message, state):
        if not db.check_available_user(message['from']['id']):
            return await message.answer("‚òπÔ∏è–ü—Ä–æ—Å—Ç–∏, –Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, —Ç–µ–±–µ "
                                        "–Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ *—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é*üëá\n", parse_mode="MarkdownV2",
                                        reply_markup=types.InlineKeyboardMarkup(inline_keyboard=[
                                            [
                                                types.InlineKeyboardButton(text="üòâ –ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è",
                                                                           callback_data="register")
                                            ]
                                        ]))
        return await func(message, state)

    return wrapper


def auth_user_callback(func):
    async def wrapper(call, state):
        if not db.check_available_user(call['from']['id']):
            return await call.message.answer("–ü—Ä–æ—Å—Ç–∏, –Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, —Ç–µ–±–µ "
                                             "–Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ *—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é* ‚òπÔ∏è\n", parse_mode="MarkdownV2",
                                             reply_markup=types.InlineKeyboardMarkup(inline_keyboard=[
                                                 [
                                                     types.InlineKeyboardButton(text="üòâ –ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è",
                                                                                callback_data="register")
                                                 ]
                                             ]))
        return await func(call, state)

    return wrapper
